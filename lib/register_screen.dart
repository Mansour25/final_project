import 'package:awesome_dialog/awesome_dialog.dart';import 'package:final_project/core/firebase_exception.dart';import 'package:final_project/core/static_data.dart';import 'package:final_project/homePage.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';class RegisterScreen extends StatefulWidget {  @override  State<RegisterScreen> createState() => _RegisterScreenState();}class _RegisterScreenState extends State<RegisterScreen> {  TextEditingController nameController = TextEditingController();  TextEditingController phoneController = TextEditingController();  TextEditingController emailController = TextEditingController();  TextEditingController passwordController = TextEditingController();  final formKey = GlobalKey<FormState>();  signUp() async {    try {      await FirebaseAuth.instance          .createUserWithEmailAndPassword(        email: emailController.text,        password: passwordController.text,      )          .then(        (value) {          StaticData.user = UserModel(            nameController.text,            phoneController.text,            value.user!.email.toString(),            passwordController.text,          );          Navigator.pushReplacement(              context,              MaterialPageRoute(                builder: (context) => homePage(),              ));        },      );    } on FirebaseAuthException catch (e) {      print(e.code);      AwesomeDialog(              context: context,              dialogType: DialogType.info,              animType: AnimType.rightSlide,              title: formatFirebaseAuthException(e).toString(),              titleTextStyle: TextStyle(                color: Colors.black,              ),              autoHide: Duration(milliseconds: 1200))          .show();    } catch (e) {      print(e);    }  }  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Color.fromARGB(255, 237, 236, 236),      body: Center(        child: Padding(          padding: const EdgeInsets.symmetric(            horizontal: 25,            vertical: 15,          ),          child: SingleChildScrollView(              physics: BouncingScrollPhysics(),              child: Form(                key: formKey,                child: Column(                  mainAxisAlignment: MainAxisAlignment.center,                  children: [                    Image.asset(                      "assets/mapLogo.png",                      height: 180,                    ),                    SizedBox(                      height: 50,                    ),                    Text(                      'Create Account',                      style: TextStyle(                        fontSize: 25,                        fontWeight: FontWeight.w500,                      ),                    ),                    SizedBox(                      height: 50,                    ),                    defaultFormField(                      controller: nameController,                      label: 'Name User',                      onChange: () {},                      onTap: () {},                      prefix: Icons.person,                      type: TextInputType.emailAddress,                      validator: (value) {                        if (value.isEmpty) {                          return 'Please Enter Your Email Address';                        } else {                          return '';                        }                      },                    ),                    SizedBox(                      height: 20,                    ),                    defaultFormField(                      controller: phoneController,                      label: 'phone Address',                      onChange: () {},                      onTap: () {},                      prefix: Icons.phone,                      type: TextInputType.number,                      validator: (value) {                        if (value.isEmpty) {                          return 'Please Enter Your Email Address';                        } else {                          return '';                        }                      },                    ),                    SizedBox(                      height: 20,                    ),                    defaultFormField(                      controller: emailController,                      label: 'Email Address',                      onChange: () {},                      onTap: () {},                      prefix: Icons.email,                      type: TextInputType.emailAddress,                      validator: (value) {                        if (value.isEmpty) {                          return 'Please Enter Your Email Address';                        } else {                          return '';                        }                      },                    ),                    SizedBox(                      height: 20,                    ),                    defaultFormField(                      controller: passwordController,                      label: 'password',                      onChange: () {},                      onTap: () {},                      prefix: Icons.lock,                      type: TextInputType.visiblePassword,                      validator: (value) {                        if (value.isEmpty) {                          return 'Please Enter Your Email Address';                        } else {                          return '';                        }                      },                    ),                    SizedBox(                      height: 50,                    ),                    SizedBox(                      height: 48,                      width: double.infinity,                      child: ElevatedButton(                        style: ElevatedButton.styleFrom(                          shape: RoundedRectangleBorder(                            borderRadius: BorderRadius.circular(7),                          ),                          backgroundColor: Color.fromARGB(255, 4, 59, 153),                          elevation: 1,                        ),                        onPressed: (() {                          if (formKey.currentState!.validate()) {                            signUp();                          }                        }),                        child: Text(                          "Sign Up",                          style: TextStyle(                              fontSize: 20,                              color: Color.fromARGB(255, 237, 236, 236),                              fontWeight: FontWeight.bold),                        ),                      ),                    ),                  ],                ),              )),        ),      ),    );  }}Widget defaultFormField({  required TextEditingController controller,  required TextInputType type,  required Function validator,  required Function onTap,  required Function onChange,  required String label,  required IconData prefix,}) {  return PhysicalModel(      borderRadius: BorderRadius.circular(15),      color: Colors.grey,      elevation: 10,      child: Container(        decoration: BoxDecoration(          color: Colors.white,          borderRadius: BorderRadius.circular(15),        ),        padding: EdgeInsets.symmetric(          vertical: 5,          horizontal: 10,        ),        child: TextFormField(          onTap: onTap(),          controller: controller,          keyboardType: type,          onChanged: onChange(),          obscureText: false,          onFieldSubmitted: (value) {            print(value);          },          decoration: InputDecoration(            prefixIcon: Icon(prefix),            labelText: label,            border: InputBorder.none,          ),          validator: (value) {            if (value!.isEmpty) {              return 'Form must not be empty !';            } else {              return null;            }          },        ),      ));}Widget defaultbutton(  double width,  double height,  String text,  Color color,  Color colortext,  double fontsize,  Function onTap,) =>    GestureDetector(      onTap: () {        onTap();      },      child: Container(        width: width,        height: height,        child: Center(          child: Text(            text,            style: TextStyle(                color: colortext,                fontWeight: FontWeight.w600,                fontSize: fontsize),          ),        ),        decoration: BoxDecoration(          color: color,          borderRadius: BorderRadius.circular(8),        ),      ),    );